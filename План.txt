1. КОНСТРУКТОРЫ:
Загрузка всех данных валютного банка
Цель: Проверить наличие данных валютного банка и загрузить их при отсутствии или создать новый файл для хранения данных
Вход: иницилизация функции
Выход: загрузка данных

Тесты
Проверка на создание файлов и корректности загрузки данных так как данная функция вызывает 2 другие функции загрузок (XMLProvider.LoadValutes() и 
XMLProvider.LoadUsers())и преобразует данные в классы и заполняет их

public static void LoadData()
проверка класса XMLProvider
подсунуть не файл в XMLProvider
проверки на сохранения 
проверки на битые файлы
проверки на пустой файл
============================================================================================================================================================================================================
Добавление пользователя
Цель: Добавить нового пользователя валютного банка

Вход: User u = new User(текст);
Выход: создание пользователя

Тесты (вход - выход)
Пользователь уже имеется в базе данных -> вывод сообщения об ошибке
Введение не корректные символы (new Regex(@"^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$")) -> вывод сообщения об ошибке
Проверка корректности добавление пользователя в классы приложения и правильное добавление нового пользователя

public static bool AddUser(User user)
============================================================================================================================================================================================================
Цель: Добавить историю действий пользователя

Вход: выбранный класс User и текст
Выход: добавление выбранному пользователю историю действий

Тесты
Проверка создании истории пользователя от выполнение этих функций
	Пополнение баланса
	Вывод баланса
	Перевод другому пользователю
	Получение перевода от другого пользователя
	Пустая строка и очень длинная строка

public static void AddNote(User user, string data)
============================================================================================================================================================================================================

2. ВНУТРЕННИЕ ФУНКЦИИ:
Цель: корректное отображение при переводе между разными валютами и перевод этих валют с учётом правильной конвертации
Вход: валюта from, валюта to, количество валюты от, при надобности наличие TextBox для некоторых действий в приложении 
Выход: число конвертированной валюты to от from

Тесты
Проверка корректности работы при подачи TextBox и без
Проверка корректности конвертации валюты from/to
Проверка на не число
Проверка на слишком много цифр после запятой
Проверка на слишком большое число
Добавить новую неизвестную валюту и проверить корректность работы

 public static double Calculate(Valute from, Valute to, string amountStr, TextBox tbox = null)
============================================================================================================================================================================================================
Цель вывод баланса
Тесты
1. корректное значение
2. достаточно средств или нет
3. проверка на отрицательное значение
public static bool BalanceWithdrawal(Balance balance, double amount)
============================================================================================================================================================================================================
Цель пополнить баланса
Тесты
1. корректное количества пополняемой валюты
2. корректное пополнение баланса нужного пользователя и сохранение в его класс
3. пополнение отрицательного числа
public static void AddToBalance(Balance balance, double amount)
============================================================================================================================================================================================================
Цель перевод валюту другому пользователю
Тесты:
1. корректное значение
2. достаточно средств или нет
3. коректное пополнение баланса нужного пользователя и корректный уменьшение средств нужного пользователя
4. числовое значение, а не текст 
5. отрицательные значения
public static double Transfer(Balance from, Balance to, String textAmount)
============================================================================================================================================================================================================


 контроллер
 public static bool BalanceWithdrawal(Balance balance, double amount)
  public static double Transfer(Balance from, Balance to, String textAmount)
    public static double Calculate(Valute from, Valute to, string amountStr, TextBox tbox = null)
	public static bool AddUser(User user)
	public static void LoadData()
	
	AddCryptoValute.cs
	button1_Click
	
	AddNewUser.cs
	Create()
	
	AddNewValute.cs
	button1_Click
	
	BalanceWithdrawal.cs
	button1_Click
	
	CryptoCurrencyTransfer.cs
	button1_Click
	

План тестирования функции какие настройки какие результаты и тд
	
	

